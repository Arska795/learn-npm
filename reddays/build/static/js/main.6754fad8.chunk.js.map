{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TestLink","startDate","endDate","expected","onClick","color","className","tabIndex","style","App","useState","setStartDate","setEndDate","handleTest","type","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA2CA,IAAMA,EAAW,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACzD,OACC,sBAAKC,UAAU,YAAYC,SAAS,KAAKC,MAAO,CAACH,MAAOA,GAAgB,IACvED,QAAS,kBAAMA,EAAQ,CAACH,YAAWC,aADpC,UAECD,EAFD,MAEeC,EAFf,OAE4BC,MAefM,EA3Df,WACC,MAAkCC,mBAAS,cAA3C,mBAAOT,EAAP,KAAkBU,EAAlB,KACA,EAA8BD,mBAAS,cAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KAEMC,EAAa,SAAC,GAA0B,IAAzBZ,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAC/BS,EAAaV,GACbW,EAAWV,IAGZ,OACC,sBAAKI,UAAU,MAAf,UACC,sBAAKA,UAAU,SAAf,UACC,sBAAKA,UAAU,cAAf,wBAEC,uBAAOQ,KAAK,OAAOC,MAAOd,EAAWe,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOH,aAE7E,sBAAKT,UAAU,cAAf,sBAEC,uBAAOQ,KAAK,OAAOC,MAAOb,EAASc,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,OAAOH,gBAI1E,sBAAKT,UAAU,QAAf,UACC,cAAC,EAAD,CAAUL,UAAU,aAAaC,QAAQ,aAAaC,SAAS,SAASC,QAASS,IACjF,cAAC,EAAD,CAAUZ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,MAAMC,QAASS,IAC9E,cAAC,EAAD,CAAUZ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,OAAQC,QAASS,IAChF,cAAC,EAAD,CAAUZ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,OAAQC,QAASS,IAEhF,cAAC,EAAD,CAAUZ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,gBAAgBC,QAASS,EAAYR,MAAM,QAC1G,cAAC,EAAD,CAAUJ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,cAAeC,QAASS,EAAYR,MAAM,QACzG,cAAC,EAAD,CAAUJ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,iBAAiBC,QAASS,EAAYR,MAAM,QAC3G,cAAC,EAAD,CAAUJ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,iBAAiBC,QAASS,EAAYR,MAAM,QAC3G,cAAC,EAAD,CAAUJ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,4BAA4BC,QAASS,EAAYR,MAAM,QACtH,cAAC,EAAD,CAAUJ,UAAU,aAAaC,QAAQ,aAAaC,SAAS,MAAOC,QAASS,EAAYR,MAAM,WAElG,qBAAKC,UAAU,iBC1BHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6754fad8.chunk.js","sourcesContent":["import {useState} from 'react'\nimport './App.css'\n\nfunction App() {\n\tconst [startDate, setStartDate] = useState('2021-08-01');\n\tconst [endDate, setEndDate] = useState('2021-08-31');\n\n\tconst handleTest = ({startDate, endDate}) => {\n\t\tsetStartDate(startDate)\n\t\tsetEndDate(endDate)\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"picker\">\n\t\t\t\t<div className=\"date-picker\">\n\t\t\t\t\tStart date:\n\t\t\t\t\t<input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"date-picker\">\n\t\t\t\t\tEnd date:\n\t\t\t\t\t<input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/*\tComponent goes here */}\n\t\t\t<div className=\"tests\">\n\t\t\t\t<TestLink startDate=\"2021-08-01\" endDate=\"2021-08-31\" expected=\"August\" onClick={handleTest} />\n\t\t\t\t<TestLink startDate=\"2021-05-01\" endDate=\"2021-05-31\" expected=\"May\" onClick={handleTest} />\n\t\t\t\t<TestLink startDate=\"2021-01-01\" endDate=\"2021-12-31\" expected=\"2021\"  onClick={handleTest} />\n\t\t\t\t<TestLink startDate=\"2018-01-01\" endDate=\"2018-12-31\" expected=\"2018\"  onClick={handleTest} />\n\n\t\t\t\t<TestLink startDate=\"2019-11-01\" endDate=\"2019-11-30\" expected=\"November 2019\" onClick={handleTest} color=\"red\" />\n\t\t\t\t<TestLink startDate=\"2018-08-01\" endDate=\"2018-08-31\" expected=\"August 2018\"  onClick={handleTest} color=\"red\" />\n\t\t\t\t<TestLink startDate=\"2021-07-05\" endDate=\"2021-08-20\" expected=\"5 Jul - 20 Aug\" onClick={handleTest} color=\"red\" />\n\t\t\t\t<TestLink startDate=\"2021-01-01\" endDate=\"2021-05-30\" expected=\"1 Jan - 30 May\" onClick={handleTest} color=\"red\" />\n\t\t\t\t<TestLink startDate=\"2019-11-10\" endDate=\"2019-11-29\" expected=\"10 Nov 2019 - 29 Nov 2019\" onClick={handleTest} color=\"red\" />\n\t\t\t\t<TestLink startDate=\"2021-10-18\" endDate=\"2021-10-24\" expected=\"W42\"  onClick={handleTest} color=\"red\" />\n\t\t\t</div>\n\t\t\t<div className=\"day-list\"></div>\n\t\t</div>\n\t);\n}\n\nconst TestLink = ({startDate, endDate, expected, onClick, color}) => {\n\treturn (\n\t\t<div className=\"test-link\" tabIndex=\"-1\" style={{color: color ? color : ''}}\n\t\t\tonClick={() => onClick({startDate, endDate})}>\n\t\t{startDate} - {endDate} -> {expected}\n\t\t</div>\n\t)\n}\n\nconst RedDay = ({date, hours, name}) => {\n\treturn (\n\t\t<div className=\"red-day\">\n\t\t\t<div className=\"red-day-date p2\">{date}</div>\n\t\t\t<div className=\"red-day-name b p2\">{name}</div>\n\t\t\t<div className=\"red-day-hours p2\">{hours === 0 ? 'Ledigt' : 'Halvdag'}</div>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}